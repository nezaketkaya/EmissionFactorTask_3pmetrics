// <auto-generated />
using System;
using EmissionFactorTask_3pmetrics.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmissionFactorTask_3pmetrics.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmissionFactorTask_3pmetrics.Models.Catalogs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("catalogName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Catalog");
                });

            modelBuilder.Entity("EmissionFactorTask_3pmetrics.Models.EmissionFactors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("catalogID")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("effectiveEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("effectiveStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("emissionFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emissionFactorTittle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emissionIDHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EmissionFactor");
                });

            modelBuilder.Entity("EmissionFactorTask_3pmetrics.Models.EmissionMappings", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("emissionFactorID")
                        .HasColumnType("int");

                    b.Property<int>("pointID")
                        .HasColumnType("int");

                    b.Property<int>("pointUnitID")
                        .HasColumnType("int");

                    b.Property<int>("sourceID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("EmissionMapping");
                });

            modelBuilder.Entity("EmissionFactorTask_3pmetrics.Models.EmissionPoints", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("pointDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pointIDHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pointName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EmissionPoint");
                });

            modelBuilder.Entity("EmissionFactorTask_3pmetrics.Models.EmissionSources", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("sourceIDHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EmissionSource");
                });

            modelBuilder.Entity("EmissionFactorTask_3pmetrics.Models.EmissionSourcesUnits", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("pointID")
                        .HasColumnType("int");

                    b.Property<string>("unitIDHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unitSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unitTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EmissionSourcesUnit");
                });
#pragma warning restore 612, 618
        }
    }
}
